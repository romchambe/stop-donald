let user_action;
let timer;
let countdown;


let modalFormContent = {
	'recruit':'<p>What will be the name of this new spy?</p><input id="spy-name" name="spy[name]" type="text" /><input type="submit" class="btn btn-primary" value="Update" name="commit" id="modal-submit">', 
	'reinforce':'<input type="submit" class="btn btn-primary" value="Update" name="commit" id="modal-submit">' 
};

function bindFormClickListeners () {
	$('#modal-form .btn').on("click", function() {
		let action = {};
		action.user_action = this.dataset.action;
		let address = window.location.href + '/actions'
		$.ajax({
		  type: "POST",
		  url: address,
		  data: JSON.stringify(action),
		  success: function (data) {
		  	actionResponse(data);
		  },
		  dataType: 'json',
		  contentType: 'application/json'
		});
		$('#action-selection').addClass('hidden');
		$('#action-cancel').removeClass('hidden');
	});

	$('#get-started').on('click', function() {
		window.location.reload();
	}); 

	$('#message-button').on('click', function() {
		$('#message-container').toggle();
		$('#message-button').css('display','none');
		$('#message-button-close').css('display','flex');
	});
	$('#message-button-close').on('click', function() {
		$('#message-container').toggle();
		$('#message-button-close').css('display','none');
		$('#message-button').css('display','flex');
	});

	$('.unread').on('click', function () {
		$(this).removeClass('unread'); 
		$(this).addClass('read');
		let message_id = this.dataset.message;
		$.ajax({
		  	type: "POST",
		  	url: window.location.origin + '/read?message_id=' + message_id
		});
		updateUnread();
 	});
}

function actionResponse (data) {
	let user_action = data.user_action;
	let action;

	if (data.selector === '#cities') {
		for (var key in data.msg) {
    		if (data.msg.hasOwnProperty(key)) {
    			el = '#city-id-' + data.msg[key]["id"]; 
    			$(el).removeAttr('disabled');
			}; 
		};

		$('#modal-action-selection').modal('toggle');

		action = $('#cities-form').attr('action') + '?user_action=' + user_action;
		$('#cities-form').attr('action', action);
		
		$('#cities-submit').removeClass('hidden');
		$('#cities-submit').removeAttr('disabled');

		$('.city-input').on('click', function() {
			checkNumberOfSelectedCities(data.max);
		});

	} else if (data.selector === '#modal-form') {
		$('#modal-actions').addClass('hidden');
		$('#modal-dismissal').addClass('hidden');
		$('#modal-update').removeClass('hidden');
		$('#modal-action-cancel').removeClass('hidden');

		action = $('#modal-update form').attr('action') + '?user_action=' + user_action;
		$('#modal-update form').attr('action', action);

		if (user_action === 'reinforce') {
			let reinforcementConfirmation = 'You are about to send ';
			for (var key in data.msg) {
	    		if (data.msg.hasOwnProperty(key)) {
	    			reinforcementConfirmation += data.msg[key] + ' ' + key + ' ';
				}; 
			};
			reinforcementConfirmation += 'to the rebels. <p>Do you want to proceed?</p>';
			$('#modal-update form').append(reinforcementConfirmation + modalFormContent[user_action]); 

		} else {
			$('#modal-update form').append(modalFormContent[user_action]);
			$('#modal-update form').attr('onsubmit','checkSpyNameLength()');
		};
	};
}

function checkSpyNameLength () {
 	if ($("#spy-name").val().length > 2) {
   		return;
 	};
 	$('#modal-notification-area').removeClass('hidden');
 	$('#modal-notification-area').html('The name of your spy must have at least 3 characters.');
 	event.preventDefault();
}

function checkNumberOfSelectedCities(max) {
	if ($('.city-input:checked').length > max) {
		$("#notification-area").removeClass('hidden');
		$('#notification-area').append('<div class="alert alert-notice">You cannot select more than ' + max + ' cities/launch sites </div>');
		event.preventDefault();
	}
}

function startTimer() {
	clearInterval(countdown);
	timer = parseInt($('#timer').text());

	$(window).on('beforeunload', function () {
 		if (!isNaN(timer)) {
 			let timer_update = timer
 			$.ajax({
		  		type: "POST",
		  		url: window.location.href + '/timer_update?value=' + timer_update
			});
 		};
	});

	countdown = setInterval(function() { 
		timer -= 1;
		if (timer <= 0) {
			$.ajax({
		  		type: "PUT",
		  		url: window.location.href + '?user_action=pass'
			});
		}
		$('#timer').html(timer);
	}, 1000);
}

function updateUnread() {
	let unreadCount = $('.unread').length;
	if (unreadCount === 0) {
		$('#unread-counter').css('opacity', '0');
		$('#unread-counter-close').css('opacity', '0');
	} else {
		$('#unread-counter').css('opacity', '1');
		$('#unread-counter').html(unreadCount);
		$('#unread-counter-close').css('opacity', '1');
		$('#unread-counter-close').html(unreadCount);
	};
}

function generateMap () {

        mapboxgl.accessToken = 
        'pk.eyJ1Ijoicm9tY2hhbWJlIiwiYSI6ImNqZmRyZW1pNDJxMDEycm52NnQ1a2NmMzQifQ.T_tgG6mX6yfcLaGRmT0sgg';
        
        let map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/romchambe/cjfdrfwhd9z052snsvfduuzg2', 
            center: [-110.425,45.491],
  			zoom: 2.25,
  			maxZoom: 3.8, 
  			minZoom: 1.8,
  			attributionControl: false
        });
        map.dragRotate.disable();
        map.addControl(new mapboxgl.FullscreenControl());

        let address = window.location.href + '/map';
        let currentUserId = {user_id: userId}
        $.ajax({
		  type: "POST",
		  url: address,
		  success: function (data) {
		  	populateMap(data, map);
		  },
		  dataType: 'json',
		  contentType: 'application/json'
		});
}

function populateMap(arrayOfFeatures,map) {
	
	var geojson = {
  	  type: 'FeatureCollection',
  	  features: arrayOfFeatures
  	};
  	console.log(geojson);
	geojson.features.forEach(function(marker) {
	  // create a HTML element for each feature
	  var el = document.createElement('div');
	  el.className = 'marker';

	  // make a marker for each feature and add to the map
	  new mapboxgl.Marker(el)
	  .setLngLat(marker.geometry.coordinates)
	  .addTo(map);
	});
}


$(document).on('turbolinks:load', function () {
	bindFormClickListeners();
	updateUnread();
	generateMap();
	// startTimer();
});


